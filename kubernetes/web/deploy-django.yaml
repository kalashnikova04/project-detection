apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-deploy
  namespace: lpdet
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: django
      app.kubernetes.io/part-of: det-app
  template:
    metadata:
      labels:
        app.kubernetes.io/component: django
        app.kubernetes.io/part-of: det-app
    spec:
      serviceAccountName: sa-web
      initContainers:
      - name: migrations-waiting
        image: "groundnuty/k8s-wait-for:v2.0"
        imagePullPolicy: IfNotPresent
        args:
          - "job"
          - "django-pre-run"
      - name: set-permissions-on-share-dir
        image: busybox
        command: ["/bin/chown", "-R", "100:102", "/lp_detection/media/"]
        securityContext:
          runAsUser: 0
          privileged: true
        volumeMounts:
          - name: share-media
            mountPath: /lp_detection/media
      containers:
      - name: django
        image: kalashnikova/lp-detection:django_5
        # registry.gitlab.akhcheck.ru/anastasiya.kalashnikova/highload-project/django:deb_f_stat
        command: ["gunicorn", "lp_detection.wsgi:application", "--bind", "0.0.0.0:8098"]
        resources:
          limits:
            memory: "1024Mi"
            cpu: "1"
        ports:
        - containerPort: 8098
        envFrom:
          - configMapRef:
              name: cm-django
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                key: POSTGRES_USER
                name: pgdb-secret
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: POSTGRES_PASSWORD
                name: pgdb-secret
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                key: POSTGRES_DB
                name: pgdb-secret
          - name: DATABASE_URL
            value: postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@pgdb-svc:5432/$(POSTGRES_DB)
          - name: RABBITMQ_DEFAULT_USER
            valueFrom:
              configMapKeyRef:
                key: RABBITMQ_DEFAULT_USER
                name: rabbitmq-configmap
          - name: RABBITMQ_DEFAULT_PASS
            valueFrom:
              configMapKeyRef:
                key: RABBITMQ_DEFAULT_PASS
                name: rabbitmq-configmap
          - name: RABBITMQ_DEFAULT_VHOST
            valueFrom:
              configMapKeyRef:
                key: RABBITMQ_DEFAULT_VHOST
                name: rabbitmq-configmap
          - name: HOSTNAME_RMQ
            valueFrom:
              configMapKeyRef:
                key: service
                name: rabbitmq-configmap
          - name: RMQ_URL
            value: amqp://$(RABBITMQ_DEFAULT_USER):$(RABBITMQ_DEFAULT_PASS)@rabbitmq:5672/$(RABBITMQ_DEFAULT_VHOST)
          - name: SHARE_DIR
            value: 'share'
        volumeMounts:
          - name: share-media
            mountPath: /lp_detection/media
      volumes:
        - name: share-media
          persistentVolumeClaim:
            claimName: pvc-media
